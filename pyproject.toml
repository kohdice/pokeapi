[tool.poetry]
name = "pokeapi"
version = "0.1.0"
description = "API for Pokédex built in FastAPI."
authors = ["kohdice <kohdice@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.94.1"
uvicorn = "^0.21.0"
elasticsearch = "=7.13.4"


[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
flake8-isort = "^6.0.0"
flake8-bugbear = "^23.1.14"
flake8-builtins = "^2.1.0"
flake8-pytest-style = "^1.6.0"
pyproject-flake8 = "^6.0.0.post1"
pep8-naming = "^0.13.3"
mypy = "^0.991"
black = "^22.12.0"
isort = "^5.11.4"
pytest = "^7.2.1"
pytest-mock = "^3.10.0"
pytest-cov = "^4.0.0"
sphinx = "^6.1.3"
sphinx-rtd-theme = "^1.2.0"
sphinx-pyproject = "^0.1.0"
taskipy = "^1.10.3"
httpx = "^0.24.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.pytest.ini_options]
markers = [
    "only_containers: mark as tests that can only be run in containers (deselect with '-m \"not only_container\"')",
    "param: mark as tests for query parameters (deselect with '-m \"not param\"')",
    "query: mark as tests for queries (deselect with '-m \"not query\"')",
]

[tool.coverage.run]
omit = [
    "tests/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = ["@abstractmethod"]


[project]
name = "pokeapi"
version = "0.1.0"
description = "API for Pokédex built in FastAPI."
readme = "README.md"

[[project.authors]]
name = "kohdice"

[tool.sphinx-pyproject]
project = "pokeapi"
copyright = "2023, kohdice"
language = "en"
package_root = "pokeapi"
html_theme = "sphinx_rtd_theme"
todo_include_todos = true
templates_path = ["_templates"]
html_static_path = ["_static"]
extensions = [
  "sphinx.ext.autodoc",
  "sphinx.ext.viewcode",
  "sphinx.ext.todo",
  "sphinx.ext.napoleon",
]

[tool.taskipy.tasks]
test = "pytest -s -vv --cov=. --cov-branch --cov-report=html"
fmt = "task fmt-black && task fmt-isort"
fmt-black = "black pokeapi tests"
fmt-isort = "isort pokeapi tests"
lint = "task lint-black && task lint-flake8 && task lint-mypy"
lint-flake8 = "flake8 pokeapi tests"
lint-mypy = "mypy pokeapi tests"
lint-black = "black --check pokeapi tests"
docs = "sphinx-apidoc -F -o docs pokeapi && sphinx-build docs docs/build"
